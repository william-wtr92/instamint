name: Instamint Monorepo - Deploy CI/CD

on:
  push:
    branches:
      - "staging"
    tags:
      - "*"

jobs:
  build_and_publish_staging:
    name: üì´ Build and Publish Staging
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: üî¨ Checkout to ${{ github.ref }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: üåÄ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: ‚ôªÔ∏è Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üîí Login to GitHub Packages
        run: echo "${{ secrets.TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: üê≥ Docker Compose Build
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push
        working-directory: ./
        env:
          DB_CONNECTION_HOST: ${{ secrets.DB_CONNECTION_HOST_DOCKER }}
          DB_CONNECTION_USER: ${{ secrets.DB_CONNECTION_USER_DOCKER }}
          DB_CONNECTION_PWD: ${{ secrets.DB_CONNECTION_PASSWORD_DOCKER }}
          DB_CONNECTION_DB: ${{ secrets.DB_CONNECTION_DOCKER }}
          SECURITY_JWT_SECRET: ${{ secrets.SECURITY_JWT_SECRET }}
          SECURITY_PASSWORD_PEPPER: ${{ secrets.SECURITY_PASSWORD_PEPPER }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          FILE_SERVICE_URL: ${{ secrets.FILES_SERVICE_URL_DOCKER }}

  build_and_publish_prod:
    name: üì´ Build and Publish Production
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: üî¨ Checkout to ${{ github.ref }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: üåÄ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: ‚ôªÔ∏è Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üîí Login to GitHub Packages
        run: echo "${{ secrets.TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: üê≥ Docker Compose Build
        run: |
          docker-compose -f docker-compose.prod.yml build
          docker-compose -f docker-compose.prod.yml push
        working-directory: ./
        env:
          DB_CONNECTION_HOST: ${{ secrets.DB_CONNECTION_HOST_DOCKER }}
          DB_CONNECTION_USER: ${{ secrets.DB_CONNECTION_USER_DOCKER }}
          DB_CONNECTION_PWD: ${{ secrets.DB_CONNECTION_PASSWORD_DOCKER }}
          DB_CONNECTION_DB: ${{ secrets.DB_CONNECTION_DOCKER }}
          SECURITY_JWT_SECRET: ${{ secrets.SECURITY_JWT_SECRET }}
          SECURITY_PASSWORD_PEPPER: ${{ secrets.SECURITY_PASSWORD_PEPPER }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          FILE_SERVICE_URL: ${{ secrets.FILES_SERVICE_URL_DOCKER }}