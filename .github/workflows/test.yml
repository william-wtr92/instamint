name: Instamint Monorepo - Test CI/CD

on:
  push:
    branches:
      - "main"
      - "staging"
      - "ITM-*"
  pull_request:
    branches:
      - "main"
      - "staging"

jobs:
  test_server:
    name: ðŸ”Ž Jest for Server Side
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.DB_CONNECTION_USER_DOCKER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_CONNECTION_PASSWORD_DOCKER }}
          POSTGRES_DB: ${{ secrets.DB_CONNECTION_DOCKER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout to ${{ github.ref }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install Business Server dependencies
        run: |
          cd apps/server/instamint-business
          pnpm install

      - name: ðŸ§ª Run Unit Tests
        run: pnpm test:business
        env:
          DB_CONNECTION_HOST: ${{ secrets.DB_CONNECTION_HOST_DOCKER }}
          DB_CONNECTION_USER: ${{ secrets.DB_CONNECTION_USER_DOCKER }}
          DB_CONNECTION_PWD: ${{ secrets.DB_CONNECTION_PASSWORD_DOCKER }}
          DB_CONNECTION_DB: ${{ secrets.DB_CONNECTION_DOCKER }}
          SECURITY_JWT_SECRET: ${{ secrets.SECURITY_JWT_SECRET }}
          SECURITY_PASSWORD_PEPPER: ${{ secrets.SECURITY_PASSWORD_PEPPER }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          FILES_SERVICE_URL: ${{ secrets.FILES_SERVICE_URL_DOCKER }}